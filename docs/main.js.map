{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,4sBAA4sB,6a;;;;;;;;;;;ACA5sB,gFAAgF,cAAc,2BAA2B,0HAA0H,EAAE,YAAY,gBAAgB,iBAAiB,yDAAyD,EAAE,SAAS,sBAAsB,EAAE,YAAY,kCAAkC,kBAAkB,6BAA6B,sBAAsB,EAAE,eAAe,qBAAqB,EAAE,cAAc,uBAAuB,EAAE,SAAS,iBAAiB,kBAAkB,kBAAkB,4BAA4B,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;ACA1oB;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AAY/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACftB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"top-bar\\\"></div>\\n  <img src=\\\"assets/logo.png\\\" class=\\\"logo\\\" />\\n  <div class=\\\"content\\\">\\n    <h1>Project Discontinued</h1>\\n    <p>\\n      Hi all.\\n\\n      As of the 24st of June 2018, Grimoire has been discontinued.\\n      I no longer have the time or funds to keep maintaining this project.\\n    </p>\\n\\n    <p>\\n      You can still find the source code over <a href=\\\"https://github.com/BeMacized/Grimoire\\\">here</a> and <a href=\\\"https://github.com/BeMacized/GrimoireWeb\\\">here</a>.\\n    </p>\\n\\n    <p>\\n      In case you are looking for an alternative, I can fully recommend switching to <a href=\\\"https://github.com/bra1n\\\">bra1n's</a>&nbsp;<a href=\\\"https://github.com/bra1n/judgebot\\\">JudgeBot</a>.\\n      It covers most of the functionality Grimoire used to provide, and more.\\n    </p>\\n\\n    <p>\\n      Many thanks to all the people who supported me and this project, with special thanks to <a href=\\\"https://twitter.com/LightRodAU\\\">@LightRod</a> for putting up with my many mtg related questions.\\n    </p>\\n\\n    <p>\\n      ~ BeMac\\n    </p>\\n  </div>\\n</div>\\n\"","module.exports = \"@import url(\\\"https://fonts.googleapis.com/css?family=Abel\\\");\\n.container {\\n  background-color: #FFF;\\n  box-shadow: 0 8px 17px 2px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2); }\\n.top-bar {\\n  width: 100%;\\n  height: 72px;\\n  background: linear-gradient(90deg, #f857a6, #ff5858); }\\n.logo {\\n  max-width: 1280px; }\\n.content {\\n  font-family: Abel, sans-serif;\\n  padding: 20px;\\n  width: calc(100% - 40px);\\n  max-width: 1280px; }\\n.content h1 {\\n    font-size: 3em; }\\n.content p {\\n    font-size: 1.5em; }\\n:host {\\n  width: 100vw;\\n  height: 100vh;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}